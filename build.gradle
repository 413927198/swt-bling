// Apply the java plugin to add support for Java
apply plugin: 'java'

defaultTasks 'build'

public String adjustArch(String arch) {
  switch(arch) {
    case ~/.*64.*/: return 'x86_64'
    default:        return 'i386'
  }
}

public String adjustPlatform(String platform) {
  switch(platform.replaceAll(' ', '').toLowerCase()) {
    case ~/.*linux.*/:  return 'linux'
    case ~/.*darwin.*/: return 'darwin'
    case ~/.*osx.*/:    return 'darwin'
    case ~/.*win.*/:    return 'windows'
    default:            return platform
  }
}

ext {
  swtVersion = '4.3'

  systemPlatform = adjustPlatform(System.properties['os.name'])
  systemArch = adjustArch(System.properties['os.arch'])
  systemPlatformArch = "${systemPlatform}-${systemArch}"
  config = "${systemPlatformArch}"
}

configurations {
  add 'darwin-i386'
  add 'darwin-x86_64'
  add 'linux-i386'
  add 'linux-x86_64'
  add 'windows-i386'
  add 'windows-x86_64'
}

// In this section you declare where to find the dependencies of your project
repositories {
  mavenCentral()
  maven {
    url "https://swt-repo.googlecode.com/svn/repo/"
  }
}

// In this section you declare the dependencies for your production and test code
dependencies {
  // The production code uses the SLF4J logging API at compile time
  compile 'org.slf4j:slf4j-api:1.7.5'

  // SWT
  'darwin-i386' "org.eclipse.swt:org.eclipse.swt.cocoa.macosx:${swtVersion}"
  'darwin-x86_64' "org.eclipse.swt:org.eclipse.swt.cocoa.macosx.x86_64:${swtVersion}"
  'linux-i386' "org.eclipse.swt:org.eclipse.swt.gtk.linux.x86:${swtVersion}"
  'linux-x86_64' "org.eclipse.swt:org.eclipse.swt.gtk.linux.x86_64:${swtVersion}"
  'windows-i386' "org.eclipse.swt:org.eclipse.swt.win32.win32.x86:${swtVersion}"
  'windows-x86_64' "org.eclipse.swt:org.eclipse.swt.win32.win32.x86-64:${swtVersion}"

  // Declare the dependency for your favourite test framework you want to use in your tests.
  // TestNG is also supported by the Gradle Test task. Just change the
  // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
  // 'test.useTestNG()' to your build script.
  testCompile "junit:junit:4.11"
}

compileJava {
  classpath += configurations."${config}"
}

jar {
  from {
    zipTree(configurations."${config}".singleFile)
  }
}
